
<SfDialog Width="280px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
	<DialogEvents OnOpen="OpenDialog"></DialogEvents>
	<DialogTemplates>
		<Header>@Title Town</Header>
		<Content>
			<EditForm Model="Town" Enhance OnSubmit="Save">
				<div class="card border-success">
					<div class="card-body">
						<div class="form-group">
							<label class="form-label">Name</label>
							<InputText @bind-Value="Town.Name" class="form-control"></InputText>
						</div>
						<div class="form-group mt-3 mb-3">
							<label class="form-label">Select County</label>

							@if (Town.County!= null)
							{
								string selected = Town.County!.Name;
								<SfDropDownList TValue="string" TItem="County" Placeholder="@selected" DataSource="Counties">
									<DropDownListFieldSettings Value="ID" Text="Name"></DropDownListFieldSettings>
									<DropDownListEvents TValue="string" TItem="County" ValueChange="OnValueChange"></DropDownListEvents>
								</SfDropDownList>
							}
							else
							{
								<SfDropDownList TValue="string" TItem="County" Placeholder="Select City" DataSource="Counties">
									<DropDownListFieldSettings Value="ID" Text="Name"></DropDownListFieldSettings>
									<DropDownListEvents TValue="string" TItem="County" ValueChange="OnValueChange"></DropDownListEvents>
								</SfDropDownList>
							}
						</div>
					</div>
				</div>
			</EditForm>
		</Content>
	</DialogTemplates>

	<DialogButtons>
		<DialogButton Content="SAVE" Type="ButtonType.Submit" IsPrimary="true" OnClick="Save" />
	</DialogButtons>
</SfDialog>


@code {
	[Parameter] public Town Town { get; set; } = new();
	[Parameter] public EventCallback<Town> HandleSaveOperationEvent { get; set; }
	[Parameter] public List<County> Counties{ get; set; } = new();

	private bool IsVisible { get; set; } = false;
	public string Title { get; set; } = "Add";

	public void OpenDialog()
	{
		IsVisible = true;
		StateHasChanged();
	}

	async void Save()
	{
		if (string.IsNullOrEmpty(Town.Name) || Town.CountyID<= 0)
		{
			await dialogService.AlertAsync("You need to provide Town name.", "Alert!");
		}
		else
		{
			await HandleSaveOperationEvent.InvokeAsync(Town);
		}
	}

	public void ChangeTitle(string title)
	{
		Title = title;
	}

	public void OnValueChange(ChangeEventArgs<string, County> args)
	{
		Town.CountyID = int.Parse(args.Value);
	}
}
